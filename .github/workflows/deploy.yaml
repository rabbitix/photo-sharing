name: 'main'
on:
  push:
    tags:
      - '*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set env
        run: |
              echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
              echo "RELEASE=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ github.event.repository.name }}:${{ env.RELEASE_VERSION }} .

      - name: set ssh key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Load Docker image to remote server
        run: docker save ${{ github.event.repository.name }}:${{ env.RELEASE_VERSION }} | ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_ADDRESS }} docker load

      - name: set tag variable
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_ADDRESS }} << 'ENDSSH'
          echo "DOCKER_IMAGE_VERSION=${{ env.RELEASE_VERSION }}" > ~/${{ env.RELEASE }}/.env
          ENDSSH

      - name: Transfer Docker Compose file to remote server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_ADDRESS }}:${{ secrets.SERVER_PATH }}

      - name: Deploy Docker containers using Docker Compose on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_ADDRESS }} << 'ENDSSH'
          docker compose -f ${{ secrets.SERVER_PATH }}/docker-compose.yml down && docker compose -f ${{ secrets.SERVER_PATH }}/docker-compose.yml up -d
          ENDSSH

      - name: Remove SSH key
        run: rm -f ~/.ssh/id_rsa
